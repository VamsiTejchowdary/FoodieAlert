(()=>{var e={};e.id=552,e.ids=[552],e.modules={56037:e=>{"use strict";e.exports=require("mongoose")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},32336:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>x,routeModule:()=>c,serverHooks:()=>g,workAsyncStorage:()=>l,workUnitAsyncStorage:()=>m});var s={};r.r(s),r.d(s,{POST:()=>p});var a=r(42706),n=r(28203),o=r(45994),u=r(81755),i=r(53253),d=r(39187);async function p(e){try{let{id:t,status:r}=await e.json();await (0,u.x)();let s=await i.A.findByIdAndUpdate(t,{status:r},{new:!0});if(!s)return d.NextResponse.json({message:"User not found."},{status:404});return d.NextResponse.json({message:"User status updated successfully.",user:s},{status:200})}catch(e){return console.error(e),d.NextResponse.json({message:"An error occurred while updating the user status."},{status:500})}}let c=new a.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/admindashboard/updateuserstatus/route",pathname:"/api/admindashboard/updateuserstatus",filename:"route",bundlePath:"app/api/admindashboard/updateuserstatus/route"},resolvedPagePath:"/Users/vamsitejchowdary/Documents/GitHub/FoodieAlert/app/api/admindashboard/updateuserstatus/route.js",nextConfigOutput:"",userland:s}),{workAsyncStorage:l,workUnitAsyncStorage:m,serverHooks:g}=c;function x(){return(0,o.patchFetch)({workAsyncStorage:l,workUnitAsyncStorage:m})}},96487:()=>{},78335:()=>{},81755:(e,t,r)=>{"use strict";r.d(t,{x:()=>n});var s=r(56037),a=r.n(s);let n=async()=>{try{await a().connect(process.env.MONGODB_URI),console.log("Connected to MongoDB"),console.log("process.env.MONGODB_URI:",process.env.REACT_APP_SERVICE_ID)}catch(e){console.log("Error connecting to MongoDB: ",e)}}},53253:(e,t,r)=>{"use strict";r.d(t,{A:()=>o});var s=r(56037),a=r.n(s);let n=new s.Schema({name:{type:String,required:!0},email:{type:String,required:!0,unique:!0,lowercase:!0},number:{type:Number,required:!0},password:{type:String,required:!0},role:{type:String,default:"user"},status:{type:String,default:"pending"}},{timestamps:!0});n.pre("save",function(e){this.email=this.email.toLowerCase(),e()});let o=s.models.User||a().model("User",n)}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[994,452],()=>r(32336));module.exports=s})();